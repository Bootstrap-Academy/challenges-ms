//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::ChallengesReportReason;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "challenges_subtask_reports")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub subtask_id: Uuid,
    pub user_id: Option<Uuid>,
    pub timestamp: DateTime,
    pub reason: ChallengesReportReason,
    #[sea_orm(column_type = "Text")]
    pub comment: String,
    pub completed_by: Option<Uuid>,
    pub completed_timestamp: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::challenges_subtasks::Entity",
        from = "Column::SubtaskId",
        to = "super::challenges_subtasks::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ChallengesSubtasks,
}

impl Related<super::challenges_subtasks::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChallengesSubtasks.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
