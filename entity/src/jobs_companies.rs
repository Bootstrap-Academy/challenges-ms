//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "jobs_companies")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub website: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub youtube_video: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub twitter_handle: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub instagram_handle: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub logo_url: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::jobs_jobs::Entity")]
    JobsJobs,
}

impl Related<super::jobs_jobs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JobsJobs.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
